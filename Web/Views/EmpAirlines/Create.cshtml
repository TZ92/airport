@model Domain.Entities.EmpAirline
<link rel="stylesheet" href="~/Content/tp/css/chosen.min.css" />
<link rel="stylesheet" href="~/Content/tp/css/datepicker.min.css" />
<link rel="stylesheet" href="~/Content/tp/css/bootstrap-timepicker.min.css" />
<link rel="stylesheet" href="~/Content/tp/css/daterangepicker.min.css" />
<link rel="stylesheet" href="~/Content/tp/css/bootstrap-datetimepicker.min.css" />

@{
    ViewBag.Title = "Create";
}

<h2 style="color:blue"><i class="fa fa-plus-square"></i> Add Employee's Airline</h2>

@using (Html.BeginForm("Create", "EmpAirlines", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">FirstName <i class="fa fa-user"></i></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">N° CIN <i class="fa fa-credit-card"></i></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Email <i class="fa fa-envelope"></i></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contry, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contry, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Image <i class="fa fa-picture-o"></i></label>
            <div class="col-md-10">
                @Html.TextBox("Image", null, new { Type = "file" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <label class="control-label col-md-2">Phone <i class="fa fa-phone-square"></i></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <label class="control-label col-md-2">Airline Company <i class="fa fa-plane"></i></label>
            <div class="col-md-10">
                <select name="AirlinecompanyId" class="chosen-select form-control" id="form-field-select-3" data-placeholder="Choose a Airline Company...">
                        <option value=""></option>
                        @foreach (var l in ViewBag.Airlinecompanys)
                        {
                            <option value="@l.AirlinecompanyId">@l.Name</option>
                        }

                    </select>
                    @Html.ValidationMessageFor(model => model.AirlinecompanyId, "", new { @class = "text-danger" })
</div>
        </div>

       


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" style="margin-left:750px" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}




<script src="~/Scripts/js/jquery-ui.custom.min.js"></script>
<script src="~/Scripts/js/chosen.jquery.min.js"></script>
<script src="~/Scripts/js/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/js/bootstrap-timepicker.min.js"></script>
<script src="~/Scripts/js/moment.min.js"></script>
<script src="~/Scripts/js/daterangepicker.min.js"></script>
<script src="~/Scripts/js/bootstrap-datetimepicker.min.js"></script>

<script src="~/Scripts/js/bootstrap-tag.min.js"></script>

<!-- ace scripts -->
<script src="~/Scripts/js/ace-elements.min.js"></script>
<script src="~/Scripts/js/ace.min.js"></script>

<!-- inline scripts related to this page -->
<script type="text/javascript">
			jQuery(function($) {

				if(!ace.vars['touch']) {
					$('.chosen-select').chosen({allow_single_deselect:true});
					//resize the chosen on window resize

					$(window)
					.off('resize.chosen')
					.on('resize.chosen', function() {
						$('.chosen-select').each(function() {
							 var $this = $(this);
							 $this.next().css({'width': $this.parent().width()});
						})
					}).trigger('resize.chosen');
					//resize chosen on sidebar collapse/expand
					$(document).on('settings.ace.chosen', function(e, event_name, event_val) {
						if(event_name != 'sidebar_collapsed') return;
						$('.chosen-select').each(function() {
							 var $this = $(this);
							 $this.next().css({'width': $this.parent().width()});
						})
					});


					$('#chosen-multiple-style .btn').on('click', function(e){
						var target = $(this).find('input[type=radio]');
						var which = parseInt(target.val());
						if(which == 2) $('#form-field-select-4').addClass('tag-input-style');
						 else $('#form-field-select-4').removeClass('tag-input-style');
					});
				}

			    $('#date-timepicker1').datetimepicker(
                        {
                            format: 'YYYY-MM-DD HH:mm'
                        }
                    ).next().on(ace.click_event, function () {
				    $(this).prev().focus();
                    });

			    $('#date-timepicker2').datetimepicker(
                        {
                            format: 'YYYY-MM-DD HH:mm'
                        }
                    ).next().on(ace.click_event, function () {
                        $(this).prev().focus();
                    });

			});
</script>